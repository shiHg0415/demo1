package ${packageName}.domain.bo;

import com.ruoyi.common.core.validate.AddGroup;
import com.ruoyi.common.core.validate.EditGroup;
import lombok.Data;
import lombok.EqualsAndHashCode;
import javax.validation.constraints.*;

import java.util.Date;

#foreach ($import in $importList)
import ${import};
#end
#if($table.crud || $table.sub)
import com.ruoyi.common.core.domain.BaseEntity;
#set($tree=false)
#elseif($table.tree)
import com.ruoyi.common.core.domain.TreeEntity;
#set($tree=true)
#end

/**
 * ${functionName}业务对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
#if(!$tree)
#set($Entity="BaseEntity")
#else
#set($Entity="TreeEntity<${ClassName}Bo, ${pkColumn.javaType}>")
#end
@Data
@EqualsAndHashCode(callSuper = true)
public class ${ClassName}Bo extends ${Entity} {

#foreach ($column in $columns)
#if(($column.isPk == '1' || $column.isInsert == '1' || $column.isEdit == '1'))
    /**
     * $column.columnComment
     */
#if($column.isRequired == 1)
#set($Group0 = [])
#if($column.isInsert && $Group0.add('AddGroup.class'))#end
#if(($column.isEdit || $column.isPk == '1') && $Group0.add('EditGroup.class'))#end
#set($Group = $StringUtils.join($Group0, ", "))
#if($column.javaType == 'String')
    @NotBlank(message = "$column.columnComment不能为空"#if($Group), groups = {${Group}}#end)
#else
    @NotNull(message = "$column.columnComment不能为空"#if($Group), groups = {${Group}}#end)
#end
#end
    private $column.javaType $column.javaField;

#end
#end
#if($tree && ${treeParentCode} != 'parentId')
    public ${pkColumn.javaType} getParentId() {
        return ${treeParentCode};
    }

#end
}
